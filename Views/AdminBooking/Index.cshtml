@using BrewMVC.ViewModel.Bookings
@model List<BookingListVM>

@{
    ViewData["Title"] = "Booking administration";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<main class="container mt-4">
    <!-- Header -->
    <header class="d-flex justify-content-between align-items-center mb-4 mt-4">
        <h1 class="custom-heading mb-0">Administrate Bookings</h1>
    </header>

    <section aria-labelledby="bookings-heading">
        @if (Model?.Any() == true)
        {
            <!-- Summary of Pending Bookings -->
            <div class="d-flex justify-content-between align-items-center mb-3" role="alert">
                <div>
                    <strong>Pending bookings:</strong><br />
                   <span>
                        You have <span class=" text-danger fw-bold fs-7">@Model.Count(b => b.Status?.ToLower() == "pending")</span> booking(s) awaiting confirmation
                   </span> 
                </div>
                <!-- Create booking btn -->
                <a asp-action="SelectCustomer" class="btn">
                    New Booking
                </a>
            </div>
            <!-- Table layout -->
            <div class="table-responsive">
                <table class="table table-hover table-striped align-middle"
                       aria-label="Bookings administration table">
                    <thead class="table-custom-header text-white table-borderless">
                        <tr>
                            <th>Date & Time Slot</th>
                            <th>Customer</th>
                            <th>Table</th>
                            <th class="text-center align-middle">Guests</th>
                            <th class="text-center align-middle">Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var booking in Model
                            .OrderBy(b => b.BookingDate)
                            .ThenBy(b => b.Status == "Pending" ? 0 : 1)
                            .ThenBy(b => b.BookingTime))
                        {
                            <tr>
                                <!-- Display booking Date -->
                                <td>
                                    <div>
                                        <strong>@booking.BookingDate.ToString("MMM dd, yyyy")</strong>
                                    </div>
                                    <small class="text-muted">
                                        <strong>@booking.BookingTime.ToString("HH:mm") - @booking.BookingTime.AddHours(booking.DurationTime.TotalHours).ToString("HH:mm")</strong>
                                    </small>
                                </td>
                                <!-- Display Customer Name -->
                                <td>
                                    <div>
                                        <strong>@booking.Customer.Name</strong><br>
                                        <small class="text-muted">
                                            @booking.Customer.PhoneNumber <br>
                                            @booking.Customer.Email
                                        </small>
                                    </div>
                                </td>
                                <!-- Display Table number -->
                                <td>
                                    <div>
                                        <strong>Table @booking.Table.TableNumber</strong><br>
                                        <small class="text-muted">Max capacity: 
                                            @booking.Table.Capacity
                                        </small>
                                    </div>
                                </td>
                                <!-- Display number of Guest(s) -->
                                <td class="text-center align-middle">
                                    <span class="d-block w-100 fw-bold">@booking.NumberGuests</span>
                                </td>
                                <!-- Display Status with a higlighted banner -->
                                <td class="text-center align-middle">
                                    @switch (booking.Status?.ToLower())
                                    {
                                        case "pending":
                                            <span class="badge bg-warning text-dark">Pending</span>
                                            ;
                                            break;
                                        case "confirmed":
                                            <span class="badge bg-primary">Confirmed</span>
                                            ;
                                            break;
                                        case "cancelled":
                                            <span class="badge bg-danger">Cancelled</span>
                                            ;
                                            break;
                                        case "completed":
                                            <span class="badge bg-success">Completed</span>
                                            ;
                                            break;
                                        default:
                                            <span class="badge bg-secondary">@booking.Status</span>
                                            ;
                                            break;
                                    }
                                </td>
                                <!-- Edit/Delete actions -->
                                <td>
                                    <div class="btn-group" role="group">
                                        <!-- Replace Btn -->
                                        @* For this program state atm, it's safer to replace a booking (delete the old one) and search for a new table,
                                            rather than modifying the existing one. *@
                                        <form asp-action="Replace" method="post" class="d-inline me-2"
                                              onsubmit="return confirm('Your current booking will be deleted to create a new one. Do you want to continue?')">
                                            <input type="hidden" name="bookingId" value="@booking.BookingId" />
                                            <input type="hidden" name="customerId" value="@booking.CustomerId" />
                                            <button type="submit" class="btn-edit" title="Replace this booking">
                                                <i class="bi bi-arrow-repeat"></i>
                                            </button>
                                        </form>
                                        <!-- Delete Btn -->
                                        <form asp-action="Delete" method="post" class="d-inline"
                                              onsubmit="return confirm('Are you sure you want to delete @booking.Customer?.Name?')">
                                            <input type="hidden" name="bookingId" value="@booking.BookingId" />
                                            <button type="submit" class="btn-delete" title="Delete Booking">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-primary" role="alert">
                <h4>No Bookings were found</h4>
                <p>There are currently no bookings in the system</p>
            </div>
        }
    </section>
</main>